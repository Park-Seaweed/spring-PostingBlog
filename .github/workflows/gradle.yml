# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

# Repo Action 페이지에 나타날 이름 
name: Spring Boot & Gradle CI/CD 

# Event Trigger
# master branch에 push 또는 pull request가 발생할 경우 동작
# branch 단위 외에도, tag나 cron 식 등을 사용할 수 있음 
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    # 실행 환경 지정
    runs-on: ubuntu-latest

    # Task의 sequence를 명시한다.
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew clean build
spring:
  h2:
    console:
      enabled: true
  datasource:
    url: jdbc:h2:./myselectdb;AUTO_SERVER=TRUE;
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
        show_sql: true
profiles:
  include:
    - aws
    - credentials
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
cloud:
  aws:
    credentials:
      access-key: AKIARWUFJKBU2UOHNOPK
      secret-key: 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
    s3:
      region:
        static: ap-northeast-2
      bucket: mymymymyqq
